---
- import_tasks: custom_facts.yml

- group: name=humio system=yes
- user: name=humio system=yes group=humio

- name: install numactl
  apt:
    name: numactl
    state: present

- name: Create Humio directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - /usr/lib/humio
    - /etc/humio
    - /var/log/humio
  notify: Restart Humio

- name: Create Humio directories
  file:
    path: "/var/log/humio/{{ item.key }}"
    state: directory
    owner: "humio"
    group: "humio"
    mode: 0750
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Create Humio Data directories
  file:
    path: "{{ humio_data_path }}/{{ humio_host_id }}-{{ item.key }}/data"
    state: directory
    owner: "humio"
    group: "humio"
    mode: 0755
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Create Humio secondary directories
  file:
    path: "{{ humio_data_secondary_path }}/{{ humio_host_id }}-{{ item.key }}/data"
    state: directory
    owner: "humio"
    group: "humio"
    mode: 0755
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio
  when: humio_data_secondary_path is defined

- name: Download Humio jar
  get_url:
    url: "{{ humio_mirror }}/com/humio/server/{{ humio_version }}/server-{{ humio_version }}.jar"
    dest: "/usr/lib/humio/server-{{ humio_version }}.jar"
  notify: Restart Humio
  when: humio_mirror != 'master'

- name: Push Humio jar
  copy:
    src: "server-{{ humio_version }}.jar"
    dest: "/usr/lib/humio/server-{{ humio_version }}.jar"
  notify: Restart Humio
  when: humio_mirror == 'master'

- file:
    path: "/usr/lib/humio/server-{{ humio_version }}.jar"
    mode: 0644
    owner: root
    group: root

- name: Humio configuration file
  template:
    src: server.conf.j2
    dest: "/etc/humio/server_{{ item.key }}.conf"
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Humio user configuration file
  copy:
    content: "{{ humio_config.all | default('# Empty') }}"
    dest: "/etc/humio/server_all.conf"
  notify: Restart Humio

- name: Humio user-instance configuration file
  copy:
    content: "{{ humio_config[item.key] | default('# Empty') }}"
    dest: "/etc/humio/server_user_{{ item.key }}.conf"
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Create Humio SystemD template configuration
  template:
    src: "humio@.service.j2"
    dest: /etc/systemd/system/humio@.service
  notify: Restart Humio

- name: Delete Systemd cpuaffinity override
  file:
    path: "/etc/systemd/system/humio@{{ item.key }}.service.d/cpuaffinity.conf"
    state: absent
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Server is running
  service:
    name: "humio@{{ item.key }}"
    enabled: yes
    state: started
  with_dict: "{{ ansible_local.cpusockets }}"