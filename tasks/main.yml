---
- import_tasks: custom_facts.yml

- name: create Humio group
  group: name=humio system=yes
- name: create humio user
  user: name=humio system=yes group=humio

- name: install numactl
  package:
    name: numactl
    state: present

- name: Create Humio directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - /usr/lib/humio
    - /etc/humio
    - /etc/humio/filebeat
    - /var/log/humio
  check_mode: no
  notify: Restart Humio

- name: Humio Filebeat specific configuration
  tags: monitoring
  template:
    src: filebeat.yml.j2
    dest: /etc/humio/filebeat/humio.yml
    mode: 0644
    owner: root
    group: root

- name: Create Humio directories
  file:
    path: "/var/log/humio/{{ item }}"
    state: directory
    owner: "humio"
    group: "humio"
    mode: 0750
  loop: "{{ range(0, humio_processes|int)|list }}"
  notify: Restart Humio

- name: Create Humio Data directories
  file:
    path: "{{ humio_data_paths[item|string] }}/{{ humio_host_id }}-{{ item }}/data"
    state: directory
    owner: "humio"
    group: "humio"
    mode: 0755
  loop: "{{ range(0, humio_processes|int)|list }}"
  notify: Restart Humio

- name: Create Humio secondary directories
  file:
    path: "{{ humio_data_secondary_path }}/{{ humio_host_id }}-{{ item }}/data"
    state: directory
    owner: "humio"
    group: "humio"
    mode: 0755
  loop: "{{ range(0, humio_processes|int)|list }}"
  notify: Restart Humio
  when: humio_data_secondary_path is defined

- name: Create Humio cache directories
  file:
    path: "{{ humio_cache_path }}/{{ humio_host_id }}-{{ item }}"
    state: directory
    owner: "humio"
    group: "humio"
    mode: 0755
  loop: "{{ range(0, humio_processes|int)|list }}"
  notify: Restart Humio
  when: humio_cache_path is defined

- name: Check Humio jar
  tags: humio-update
  check_mode: no
  stat:
    path: "/usr/lib/humio/server-{{ humio_version }}.jar"
  register: humio_version_check

- name: Download Humio jar
  tags: humio-update
  check_mode: no
  get_url:
    url: "{{ humio_mirror }}/com/humio/server/{{ humio_version }}/server-{{ humio_version }}.jar"
    dest: "/usr/lib/humio/server-{{ humio_version }}.jar"
  notify: Restart Humio
  when: humio_mirror != 'master' and not humio_version_check.stat.exists

- name: Push Humio jar
  tags: humio-update
  check_mode: no
  copy:
    src: "server-{{ humio_version }}.jar"
    dest: "/usr/lib/humio/server-{{ humio_version }}.jar"
  notify: Restart Humio
  when: humio_mirror != 'master' and not humio_version_check.stat.exists

- name: Humio server jar permissions
  tags: humio-update
  file:
    path: "/usr/lib/humio/server-{{ humio_version }}.jar"
    mode: 0644
    owner: root
    group: root
  when: not ansible_check_mode

- name: Humio configuration file
  tags: humio-conf
  template:
    src: server.conf.j2
    dest: "/etc/humio/server_{{ item }}.conf"
  loop: "{{ range(0, humio_processes|int)|list }}"
  notify: Restart Humio

- name: Humio user configuration file
  tags: humio-conf
  copy:
    content: "{{ humio_config.all | default('# Empty') }}"
    dest: "/etc/humio/server_all.conf"
  notify: Restart Humio

- name: Humio user-instance configuration file
  tags: humio-conf
  copy:
    content: "{{ humio_config[item|string] | default('# Empty') }}"
    dest: "/etc/humio/server_user_{{ item }}.conf"
  loop: "{{ range(0, humio_processes|int)|list }}"
  notify: Restart Humio

- name: Create Humio SystemD template configuration
  tags: humio-update
  template:
    src: "humio@.service.j2"
    dest: /etc/systemd/system/humio@.service
  notify: Restart Humio

- name: Create Humio SystemD override configuration dir
  tags: humio-update
  file:
    path: /etc/systemd/system/humio@{{ item }}.service.d
    state: directory
  loop: "{{ range(0, humio_processes|int)|list }}"

- name: Create Humio SystemD override configuration
  tags: humio-update
  copy:
    content: |
      [Service]
      Environment=NUMA_NODES={{ ansible_local.numanodes[item|string].nodes }}
    dest: /etc/systemd/system/humio@{{ item }}.service.d/numa.conf
  loop: "{{ range(0, humio_processes|int)|list }}"
  notify: Restart Humio

# This needs to stay in place for anyone who performed a run
# using version 0.2.19, 0.2.20, or 0.2.21 and is now performing
# a run with 0.3.0+. Those versions dropped non-template unit
# files for Humio that will cause issues on newer versions that
# have switched back to using a systemd unit template file. This
# will be a no-op on systems where these files don't exist.
- name: Cleanup old, defunct SystemD unit files
  tags: humio-update
  file:
    path: /etc/systemd/system/humio@{{ item }}.service
    state: absent
  loop: "{{ range(0, humio_processes|int)|list }}"
  notify: Restart Humio

- name: Copy permissions
  tags: humio-permissions
  copy:
    content: "{{ humio_permissions | default('{}') }}"
    dest: "{{ humio_data_paths[item|string] }}/{{ humio_host_id }}-{{ item }}/data/view-group-permissions.json"
    mode: 0644
  loop: "{{ range(0, humio_processes|int)|list }}"

- name: Install Humioctl version {{ humioctl_version }}
  block:
    - name: humioctl lib
      file:
        path: "/usr/lib/humio/humioctl-{{ humioctl_version }}"
        state: directory
      check_mode: no
    - name: download and unarchive
      unarchive:
        src: "https://github.com/humio/cli/releases/download/v{{ humioctl_version }}/humioctl_{{ humioctl_version }}_Linux_64-bit.tar.gz"
        remote_src: yes
        dest: "/usr/lib/humio/humioctl-{{ humioctl_version }}"
      check_mode: no
    - name: link to bin
      file:
        src: "/usr/lib/humio/humioctl-{{ humioctl_version }}/humioctl"
        dest: "/usr/bin/humioctl"
        state: link
  when: skip_humio_ctl_install is not defined
