---
- import_tasks: custom_facts.yml

- group: name=humio system=yes
- user: name=humio system=yes group=humio

- name: Create Humio directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /usr/lib/humio
    - /etc/humio
    - /var/log/humio

- name: Create /var/humio/data directories
  file:
    path: /var/humio/data/{{ humio_host_id }}-{{ item.key }}
    state: directory
    owner: humio
    group: humio
  with_dict: "{{ ansible_local.cpusockets }}"

- name: Humio log directories
  file:
    path: "/var/log/humio/{{ item.key }}/"
    state: directory
  with_dict: "{{ ansible_local.cpusockets }}"

- name: Download Humio jar
  get_url:
    url: "{{ humio_mirror }}/com/humio/server/{{ humio_version }}/server-{{ humio_version }}.jar"
    dest: "/usr/lib/humio/server-{{ humio_version }}.jar"
  notify: Restart Humio

- name: Humio configuration file
  template:
    src: server.conf.j2
    dest: "/etc/humio/server_{{ item.key }}.conf"
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Humio user configuration file
  copy:
    content: "{{ humio_config.all | default('# Empty') }}"
    dest: "/etc/humio/server_all.conf"
  notify: Restart Humio

- name: Humio user-instance configuration file
  copy:
    content: "{{ humio_config[item.key] | default('# Empty') }}"
    dest: "/etc/humio/server_user_{{ item.key }}.conf"
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Create Humio SystemD template configuration
  template:
    src: "humio@.service.j2"
    dest: /etc/systemd/system/humio@.service
  notify: Restart Humio

- name: SystemD template override dirs
  file:
    path: "/etc/systemd/system/humio@{{ item.key }}.service.d"
    state: directory
  with_dict: "{{ ansible_local.cpusockets }}"

- name: Create Humio SystemD unit configuration
  template:
    src: "cpuaffinity.conf.j2"
    dest: "/etc/systemd/system/humio@{{ item.key }}.service.d/cpuaffinity.conf"
  with_dict: "{{ ansible_local.cpusockets }}"

  notify: Restart Humio

- name: Enable Humio service
  service:
    name: "humio@{{ item.key }}"
    enabled: yes
    state: started
  with_dict: "{{ ansible_local.cpusockets }}"
