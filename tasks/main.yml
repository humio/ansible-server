---
- import_tasks: custom_facts.yml

- name: create Humio user
  group: name=humio system=yes
- name: create humio group
  user: name=humio system=yes group=humio

- name: install numactl
  package:
    name: numactl
    state: present

- name: Create Humio directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - /usr/lib/humio
    - /etc/humio
    - /etc/humio/filebeat
    - /var/log/humio
  check_mode: no
  notify: Restart Humio

- name: Humio Filebeat specific configuration
  tags: monitoring
  template:
    src: filebeat.yml.j2
    dest: /etc/humio/filebeat/humio.yml
    mode: 0644
    owner: root
    group: root

- name: Create Humio directories
  file:
    path: "/var/log/humio/{{ item.key }}"
    state: directory
    owner: "humio"
    group: "humio"
    mode: 0750
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Create Humio Data directories
  file:
    path: "{{ humio_data_path }}/{{ humio_host_id }}-{{ item.key }}/data"
    state: directory
    owner: "humio"
    group: "humio"
    mode: 0755
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Create Humio secondary directories
  file:
    path: "{{ humio_data_secondary_path }}/{{ humio_host_id }}-{{ item.key }}/data"
    state: directory
    owner: "humio"
    group: "humio"
    mode: 0755
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio
  when: humio_data_secondary_path is defined

- name: Download Humio jar
  tags: humio-update
  check_mode: no
  get_url:
    url: "{{ humio_mirror }}/com/humio/server/{{ humio_version }}/server-{{ humio_version }}.jar"
    dest: "/usr/lib/humio/server-{{ humio_version }}.jar"
  notify: Restart Humio
  when: humio_mirror != 'master'

- name: Push Humio jar
  tags: humio-update
  check_mode: no
  copy:
    src: "server-{{ humio_version }}.jar"
    dest: "/usr/lib/humio/server-{{ humio_version }}.jar"
  notify: Restart Humio
  when: humio_mirror == 'master'

- name: Humio server jar permissions
  tags: humio-update
  file:
    path: "/usr/lib/humio/server-{{ humio_version }}.jar"
    mode: 0644
    owner: root
    group: root
  when: not ansible_check_mode

- name: Humio configuration file
  tags: humio-conf
  template:
    src: server.conf.j2
    dest: "/etc/humio/server_{{ item.key }}.conf"
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Humio user configuration file
  tags: humio-conf
  copy:
    content: "{{ humio_config.all | default('# Empty') }}"
    dest: "/etc/humio/server_all.conf"
  notify: Restart Humio

- name: Humio user-instance configuration file
  tags: humio-conf
  copy:
    content: "{{ humio_config[item.key] | default('# Empty') }}"
    dest: "/etc/humio/server_user_{{ item.key }}.conf"
  with_dict: "{{ ansible_local.cpusockets }}"
  notify: Restart Humio

- name: Create Humio SystemD template configuration
  tags: humio-update
  template:
    src: "humio@.service.j2"
    dest: /etc/systemd/system/humio@.service
  notify: Restart Humio

- name: Copy permissions
  tags: humio-permissions
  copy:
    content: "{{ humio_permissions | default('{}') }}"
    dest: "{{ humio_data_path }}/{{ humio_host_id }}-{{ item.key }}/data/view-group-permissions.json"
    mode: 0644
    owner: humio
    group: humio
  with_dict: "{{ ansible_local.cpusockets }}"
  when: humio_permissions_path is undefined

- name: Copy permissions
  tags: humio-permissions
  copy:
    src: "{{ humio_permissions_path }}"
    dest: "{{ humio_data_path }}/{{ humio_host_id }}-{{ item.key }}/data/view-group-permissions.json"
    mode: 0644
    owner: humio
    group: humio
  with_dict: "{{ ansible_local.cpusockets }}"
  when: humio_permissions_path is defined

- name: Install Humioctl version {{ humioctl_version }}
  block:
    - name: humioctl lib
      file:
        path: "/usr/lib/humio/humioctl-{{ humioctl_version }}"
        state: directory
      check_mode: no
    - name: download and unarchive
      unarchive:
        src: "https://github.com/humio/cli/releases/download/v{{ humioctl_version }}/humioctl_{{ humioctl_version }}_Linux_64-bit.tar.gz"
        remote_src: yes
        dest: "/usr/lib/humio/humioctl-{{ humioctl_version }}"
      check_mode: no
    - name: link to bin
      file:
        src: "/usr/lib/humio/humioctl-{{ humioctl_version }}/humioctl"
        dest: "/usr/bin/humioctl"
        state: link